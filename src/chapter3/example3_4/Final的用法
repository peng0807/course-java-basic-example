package chapter2_19;

class T { // 如果定义为final class T，则这个类T不能被继承
	// final的成员变量只能赋值一次，要么在定义时赋值，要么在构造方法中赋值
	final int i;	// 如果定义为final int i = 5，则不能在构造方法中赋值
	final static int i_s = 5; // final的静态成员变量不能在构造方法里初始化
	public T() {
		i = 10;
	}
	// 设为final的方法不能被重写override
	// private final void m() {}
	public final void m(final int j) {
		// final的成员变量不能修改它的值
		final int i = 9;
		// i =10 ;
		// final修饰的形参j，不能修改这个局部变量的值
		// j = 10;
		// final int k = 10;
		// k =12;
	}
}

class TT extends T {
	public void m() {
		System.out.println("Override method");
	}
}

public class TestFinal {
	public static void main(String[] args) {
		T t = new T();
		t.m(5);
		// t.i = 8;
	}
}
